/**
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * DoEmailLookupResponse.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_DoEmailLookupResponse_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_DoEmailLookupResponse_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  DoEmailLookupResponse
    : public ModelBase
{
public:
    DoEmailLookupResponse();
    virtual ~DoEmailLookupResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DoEmailLookupResponse members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAddress() const;
        void setAddress(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAddressType() const;
        void setAddressType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailRole() const;
        void setEmailRole(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReason() const;
        void setReason(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatus() const;
        void setStatus(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDeliverability() const;
        void setDeliverability(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isIsDisposableAddress() const;
        void setIsDisposableAddress(bool value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLocalPart() const;
        void setLocalPart(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDomainPart() const;
        void setDomainPart(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getExchange() const;
        void setExchange(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isIsInWhiteList() const;
        void setIsInWhiteList(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isIsInBlackList() const;
        void setIsInBlackList(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isHasMx() const;
        void setHasMx(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isHasAa() const;
        void setHasAa(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isHasAaaa() const;
        void setHasAaaa(bool value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRisk() const;
        void setRisk(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getPreference() const;
        void setPreference(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSuggestion() const;
        void setSuggestion(utility::string_t value);

protected:
    utility::string_t m_Address;
        utility::string_t m_AddressType;
        utility::string_t m_EmailRole;
        utility::string_t m_Reason;
        utility::string_t m_Status;
        utility::string_t m_Deliverability;
        bool m_IsDisposableAddress;
        utility::string_t m_LocalPart;
        utility::string_t m_DomainPart;
        utility::string_t m_Exchange;
        bool m_IsInWhiteList;
        bool m_IsInBlackList;
        bool m_HasMx;
        bool m_HasAa;
        bool m_HasAaaa;
        utility::string_t m_Risk;
        int32_t m_Preference;
        utility::string_t m_Suggestion;
    };

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_DoEmailLookupResponse_H_ */
