/**
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CreateSurveyNodeInputObject.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_CreateSurveyNodeInputObject_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_CreateSurveyNodeInputObject_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreateSurveyNodeInputObject
    : public ModelBase
{
public:
    CreateSurveyNodeInputObject();
    virtual ~CreateSurveyNodeInputObject();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateSurveyNodeInputObject members

    /// <summary>
    /// Node type. \\&#39;a\\&#39; answer; \\&#39;q\\&#39; - question
    /// </summary>
    utility::string_t getNodeType() const;
    bool nodeTypeIsSet() const;
    void unsetNodeType();
    void setNodeType(utility::string_t value);
    /// <summary>
    /// Node label
    /// </summary>
    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();
    void setLabel(utility::string_t value);
    /// <summary>
    /// Node body
    /// </summary>
    utility::string_t getBody() const;
    bool bodyIsSet() const;
    void unsetBody();
    void setBody(utility::string_t value);
    /// <summary>
    /// Start node id
    /// </summary>
    int32_t getStartNode() const;
    bool startNodeIsSet() const;
    void unsetStartNode();
    void setStartNode(int32_t value);
    /// <summary>
    /// Define delay for sending question to recipients after previous answer. Default is 0
    /// </summary>
    int32_t getSendDelay() const;
    bool sendDelayIsSet() const;
    void unsetSendDelay();
    void setSendDelay(int32_t value);

protected:
    utility::string_t m_NodeType;
    bool m_NodeTypeIsSet;
    utility::string_t m_Label;
    bool m_LabelIsSet;
    utility::string_t m_Body;
    bool m_BodyIsSet;
    int32_t m_StartNode;
    bool m_StartNodeIsSet;
    int32_t m_SendDelay;
    bool m_SendDelayIsSet;
};

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_CreateSurveyNodeInputObject_H_ */
