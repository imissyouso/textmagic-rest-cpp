/**
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UpdateSurveyInputObject.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_UpdateSurveyInputObject_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_UpdateSurveyInputObject_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  UpdateSurveyInputObject
    : public ModelBase
{
public:
    UpdateSurveyInputObject();
    virtual ~UpdateSurveyInputObject();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpdateSurveyInputObject members

    /// <summary>
    /// Survey name
    /// </summary>
    utility::string_t getName() const;
        void setName(utility::string_t value);
    /// <summary>
    /// Array of contact resources id message will be sent to
    /// </summary>
    utility::string_t getContacts() const;
    bool contactsIsSet() const;
    void unsetContacts();
    void setContacts(utility::string_t value);
    /// <summary>
    /// Array of list resources id message will be sent to
    /// </summary>
    utility::string_t getLists() const;
    bool listsIsSet() const;
    void unsetLists();
    void setLists(utility::string_t value);
    /// <summary>
    /// Array of E.164 phone numbers message will be sent to
    /// </summary>
    utility::string_t getPhones() const;
    bool phonesIsSet() const;
    void unsetPhones();
    void setPhones(utility::string_t value);
    /// <summary>
    /// Country values mapping (country &#x3D;&gt; inbound phone id), e.g. country[GB] &#x3D; \&quot;123\&quot;, country[US] &#x3D; \&quot;123\&quot;
    /// </summary>
    std::shared_ptr<Object> getCountry() const;
    bool countryIsSet() const;
    void unsetCountry();
    void setCountry(std::shared_ptr<Object> value);

protected:
    utility::string_t m_Name;
        utility::string_t m_Contacts;
    bool m_ContactsIsSet;
    utility::string_t m_Lists;
    bool m_ListsIsSet;
    utility::string_t m_Phones;
    bool m_PhonesIsSet;
    std::shared_ptr<Object> m_Country;
    bool m_CountryIsSet;
};

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_UpdateSurveyInputObject_H_ */
