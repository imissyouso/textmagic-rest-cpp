/**
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UsersInbound.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_UsersInbound_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_UsersInbound_H_


#include "../ModelBase.h"

#include "Country.h"
#include <cpprest/details/basic_types.h>
#include "User.h"

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  UsersInbound
    : public ModelBase
{
public:
    UsersInbound();
    virtual ~UsersInbound();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UsersInbound members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
        void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<User> getUser() const;
        void setUser(std::shared_ptr<User> value);
    /// <summary>
    /// 
    /// </summary>
    utility::datetime getPurchasedAt() const;
        void setPurchasedAt(utility::datetime value);
    /// <summary>
    /// 
    /// </summary>
    utility::datetime getExpireAt() const;
        void setExpireAt(utility::datetime value);
    /// <summary>
    /// A - active, in use (at least one message was sent/received from/to this number), U - never used before
    /// </summary>
    utility::string_t getStatus() const;
        void setStatus(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Country> getCountry() const;
        void setCountry(std::shared_ptr<Country> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();
    void setPhone(utility::string_t value);

protected:
    int32_t m_Id;
        std::shared_ptr<User> m_User;
        utility::datetime m_PurchasedAt;
        utility::datetime m_ExpireAt;
        utility::string_t m_Status;
        std::shared_ptr<Country> m_Country;
        utility::string_t m_Phone;
    bool m_PhoneIsSet;
};

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_UsersInbound_H_ */
